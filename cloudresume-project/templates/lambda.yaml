AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ResumeTableName: { Type: String }
  VisitorLambdaName: { Type: String }
  SNSTopicArn: { Type: String }
Resources:
  VisitorLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${VisitorLambdaName}-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ResumeTableName}
              - Effect: Allow
                Action: sns:Publish
                Resource: !Ref SNSTopicArn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  VisitorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref VisitorLambdaName
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Role: !GetAtt VisitorLambdaExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref ResumeTableName
          SNS_TOPIC_ARN: !Ref SNSTopicArn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: visitor-counter.zip
Outputs:
  VisitorLambdaArn:
    Value: !GetAtt VisitorFunction.Arn
